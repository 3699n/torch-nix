#include <iostream>

#define LANTERN_BUILD

#include "lantern/lantern.h"

#include <torch/torch.h>

void lanternTest()
{
    std::cout << "-- Lantern: 0.1.0" << std::endl;

    std::cout << "-- Testing Tensor" << std::endl;
    torch::Tensor tensor = torch::rand({2, 3});
    std::cout << tensor << std::endl;

    std::cout << "-- Success!" << std::endl;
}

/* Autogen Body -- Start */
/*
void lantern__cast_byte() {}
void lantern__cast_char() {}
void lantern__cast_double() {}
void lantern__cast_float() {}
void lantern__cast_int() {}
void lantern__cast_long() {}
void lantern__cast_short() {}
void lantern__cast_half() {}
void lantern_backward() {}
void lantern_set_data() {}
void lantern_data() {}
void lantern_is_leaf() {}
void lantern_output_nr() {}
void lantern__version() {}
void lantern_rename_() {}
void lantern_rename() {}
void lantern_align_to() {}
void lantern_align_as() {}
void lantern_align_tensors() {}
void lantern_refine_names() {}
void lantern_unflatten() {}
void lantern_unflatten() {}
void lantern__cudnn_ctc_loss() {}
void lantern__cudnn_rnn_flatten_weight() {}
void lantern__cudnn_rnn() {}
void lantern__cudnn_rnn_backward() {}
void lantern__cudnn_init_dropout_state() {}
void lantern__debug_has_internal_overlap() {}
void lantern__fused_dropout() {}
void lantern__masked_scale() {}
void lantern__sobol_engine_draw() {}
void lantern__sobol_engine_ff_() {}
void lantern__sobol_engine_scramble_() {}
void lantern__sobol_engine_initialize_state_() {}
void lantern__reshape_from_tensor() {}
void lantern__shape_as_tensor() {}
void lantern_dropout() {}
void lantern_dropout_() {}
void lantern_feature_dropout() {}
void lantern_feature_dropout_() {}
void lantern_alpha_dropout() {}
void lantern_alpha_dropout_() {}
void lantern_feature_alpha_dropout() {}
void lantern_feature_alpha_dropout_() {}
void lantern_abs() {}
void lantern_abs_() {}
void lantern_abs_out() {}
void lantern_acos() {}
void lantern_acos_() {}
void lantern_acos_out() {}
void lantern_avg_pool1d() {}
void lantern_adaptive_avg_pool1d() {}
void lantern_adaptive_max_pool1d() {}
void lantern_add() {}
void lantern_add_() {}
void lantern_add_out() {}
void lantern_add() {}
void lantern_add_() {}
void lantern_addmv() {}
void lantern_addmv_() {}
void lantern_addmv_out() {}
void lantern_addr() {}
void lantern_addr_() {}
void lantern_addr_out() {}
void lantern_affine_grid_generator() {}
void lantern_affine_grid_generator_backward() {}
void lantern_all() {}
void lantern_all_out() {}
void lantern_all() {}
void lantern_all_out() {}
void lantern_allclose() {}
void lantern_any() {}
void lantern_any_out() {}
void lantern_any() {}
void lantern_any_out() {}
void lantern_arange() {}
void lantern_arange() {}
void lantern_arange() {}
void lantern_arange_out() {}
void lantern_arange_out() {}
void lantern__dim_arange() {}
void lantern_argmax() {}
void lantern_argmin() {}
void lantern_as_strided() {}
void lantern_as_strided_() {}
void lantern_asin() {}
void lantern_asin_() {}
void lantern_asin_out() {}
void lantern_atan() {}
void lantern_atan_() {}
void lantern_atan_out() {}
void lantern_baddbmm() {}
void lantern_baddbmm_() {}
void lantern__baddbmm_mkl_() {}
void lantern_baddbmm_out() {}
void lantern_bartlett_window() {}
void lantern_bartlett_window() {}
void lantern_batch_norm() {}
void lantern__batch_norm_impl_index() {}
void lantern__batch_norm_impl_index_backward() {}
void lantern_bernoulli() {}
void lantern_bernoulli_out() {}
void lantern_bernoulli_() {}
void lantern_bernoulli_() {}
void lantern_bernoulli() {}
void lantern_bilinear() {}
void lantern_binary_cross_entropy_with_logits() {}
void lantern_binary_cross_entropy_with_logits_backward() {}
void lantern_bincount() {}
void lantern_bitwise_not() {}
void lantern_bitwise_not_() {}
void lantern_bitwise_not_out() {}
void lantern_logical_not() {}
void lantern_logical_not_() {}
void lantern_logical_not_out() {}
void lantern_logical_xor() {}
void lantern_logical_xor_() {}
void lantern_logical_xor_out() {}
void lantern_blackman_window() {}
void lantern_blackman_window() {}
void lantern_bmm() {}
void lantern_bmm_out() {}
void lantern_broadcast_tensors() {}
void lantern_cat() {}
void lantern_cat_out() {}
void lantern_cat() {}
void lantern_cat_out() {}
void lantern_ceil() {}
void lantern_ceil_() {}
void lantern_ceil_out() {}
void lantern_chain_matmul() {}
void lantern_chunk() {}
void lantern_clamp() {}
void lantern_clamp_() {}
void lantern_clamp_out() {}
void lantern_clamp_max() {}
void lantern_clamp_max_() {}
void lantern_clamp_max_out() {}
void lantern_clamp_min() {}
void lantern_clamp_min_() {}
void lantern_clamp_min_out() {}
void lantern_cudnn_is_acceptable() {}
void lantern_constant_pad_nd() {}
void lantern_contiguous() {}
void lantern_convolution() {}
void lantern_convolution_overrideable() {}
void lantern_convolution_backward_overrideable() {}
void lantern__convolution() {}
void lantern__convolution_nogroup() {}
void lantern__convolution_double_backward() {}
void lantern_conv1d() {}
void lantern_conv2d() {}
void lantern_conv3d() {}
void lantern_conv_tbc() {}
void lantern_conv_tbc_backward() {}
void lantern_conv_transpose1d() {}
void lantern_conv_transpose2d() {}
void lantern_conv_transpose3d() {}
void lantern_copy_() {}
void lantern__copy_from() {}
void lantern_cos() {}
void lantern_cos_() {}
void lantern_cos_out() {}
void lantern_cosh() {}
void lantern_cosh_() {}
void lantern_cosh_out() {}
void lantern_cosine_embedding_loss() {}
void lantern_cudnn_affine_grid_generator() {}
void lantern_cudnn_affine_grid_generator_backward() {}
void lantern_cudnn_batch_norm() {}
void lantern_cudnn_batch_norm_backward() {}
void lantern_cudnn_convolution() {}
void lantern_cudnn_convolution_backward_input() {}
void lantern_cudnn_convolution_backward() {}
void lantern_cudnn_convolution_backward_bias() {}
void lantern_cudnn_convolution_backward_weight() {}
void lantern_cudnn_convolution_transpose() {}
void lantern_cudnn_convolution_transpose_backward() {}
void lantern_cudnn_convolution_transpose_backward_bias() {}
void lantern_cudnn_convolution_transpose_backward_input() {}
void lantern_cudnn_convolution_transpose_backward_weight() {}
void lantern_cudnn_grid_sampler() {}
void lantern_cudnn_grid_sampler_backward() {}
void lantern_cumsum() {}
void lantern_cumsum_out() {}
void lantern_cumsum() {}
void lantern_cumsum_out() {}
void lantern_cumprod() {}
void lantern_cumprod_out() {}
void lantern_cumprod() {}
void lantern_cumprod_out() {}
void lantern_ctc_loss() {}
void lantern_ctc_loss() {}
void lantern__ctc_loss() {}
void lantern__ctc_loss_backward() {}
void lantern_det() {}
void lantern_diag_embed() {}
void lantern_diagflat() {}
void lantern_diagonal() {}
void lantern_fill_diagonal_() {}
void lantern_div() {}
void lantern_div_() {}
void lantern_div_out() {}
void lantern_div() {}
void lantern_div_() {}
void lantern_dot() {}
void lantern_dot_out() {}
void lantern_einsum() {}
void lantern_embedding() {}
void lantern_embedding_backward() {}
void lantern_embedding_dense_backward() {}
void lantern_embedding_renorm_() {}
void lantern_embedding_sparse_backward() {}
void lantern_embedding_bag() {}
void lantern__embedding_bag() {}
void lantern__embedding_bag_backward() {}
void lantern__embedding_bag_sparse_backward() {}
void lantern__embedding_bag_dense_backward() {}
void lantern__embedding_bag_per_sample_weights_backward() {}
void lantern_empty() {}
void lantern_empty() {}
void lantern_new_empty() {}
void lantern_new_full() {}
void lantern__empty_affine_quantized() {}
void lantern__empty_per_channel_affine_quantized() {}
void lantern_resize_() {}
void lantern_empty_out() {}
void lantern_empty_like() {}
void lantern_empty_like() {}
void lantern_empty_strided() {}
void lantern_erf() {}
void lantern_erf_() {}
void lantern_erf_out() {}
void lantern_erfc() {}
void lantern_erfc_() {}
void lantern_erfc_out() {}
void lantern_exp() {}
void lantern_exp_() {}
void lantern_exp_out() {}
void lantern_expm1() {}
void lantern_expm1_() {}
void lantern_expm1_out() {}
void lantern_expand() {}
void lantern_expand_as() {}
void lantern_eye() {}
void lantern_eye() {}
void lantern_eye_out() {}
void lantern_eye_out() {}
void lantern_flatten() {}
void lantern_flatten() {}
void lantern_flatten() {}
void lantern_flatten() {}
void lantern_fill_() {}
void lantern_fill_() {}
void lantern_floor() {}
void lantern_floor_() {}
void lantern_floor_out() {}
void lantern_frac() {}
void lantern_frac_() {}
void lantern_frac_out() {}
void lantern_full() {}
void lantern_full() {}
void lantern_full_out() {}
void lantern_full_like() {}
void lantern_full_like() {}
void lantern_from_file() {}
void lantern_grid_sampler() {}
void lantern_grid_sampler_2d() {}
void lantern_grid_sampler_2d_backward() {}
void lantern_grid_sampler_3d() {}
void lantern_grid_sampler_3d_backward() {}
void lantern_hann_window() {}
void lantern_hann_window() {}
void lantern_hamming_window() {}
void lantern_hamming_window() {}
void lantern_hamming_window() {}
void lantern_hamming_window() {}
void lantern_hinge_embedding_loss() {}
void lantern_ger() {}
void lantern_ger_out() {}
void lantern_group_norm() {}
void lantern_fft() {}
void lantern_ifft() {}
void lantern_rfft() {}
void lantern_irfft() {}
void lantern__fft_with_size() {}
void lantern__cufft_get_plan_cache_size() {}
void lantern__cufft_get_plan_cache_max_size() {}
void lantern__cufft_set_plan_cache_max_size() {}
void lantern__cufft_clear_plan_cache() {}
void lantern_index() {}
void lantern_index_copy_() {}
void lantern_index_copy() {}
void lantern_index_copy_() {}
void lantern_index_copy() {}
void lantern_index_put_() {}
void lantern_index_put() {}
void lantern__index_put_impl_() {}
void lantern_instance_norm() {}
void lantern_inverse() {}
void lantern_inverse_out() {}
void lantern__inverse_helper() {}
void lantern_isclose() {}
void lantern_isnan() {}
void lantern_is_distributed() {}
void lantern_is_floating_point() {}
void lantern_is_complex() {}
void lantern_is_nonzero() {}
void lantern_is_same_size() {}
void lantern_is_signed() {}
void lantern_kl_div() {}
void lantern_kl_div_backward() {}
void lantern_kthvalue() {}
void lantern_kthvalue_out() {}
void lantern_kthvalue() {}
void lantern_kthvalue_out() {}
void lantern_layer_norm() {}
void lantern_native_layer_norm() {}
void lantern_native_layer_norm_backward() {}
void lantern_native_layer_norm_double_backward() {}
void lantern_linear() {}
void lantern_mkldnn_linear() {}
void lantern_fbgemm_linear_int8_weight_fp32_activation() {}
void lantern_fbgemm_linear_int8_weight() {}
void lantern_fbgemm_linear_quantize_weight() {}
void lantern_fbgemm_pack_gemm_matrix_fp16() {}
void lantern_fbgemm_linear_fp16_weight_fp32_activation() {}
void lantern_fbgemm_linear_fp16_weight() {}
void lantern_fbgemm_pack_quantized_matrix() {}
void lantern_fbgemm_pack_quantized_matrix() {}
void lantern_linspace() {}
void lantern_linspace_out() {}
void lantern_log() {}
void lantern_log_() {}
void lantern_log_out() {}
void lantern_log10() {}
void lantern_log10_() {}
void lantern_log10_out() {}
void lantern_log1p() {}
void lantern_log1p_() {}
void lantern_log1p_out() {}
void lantern_log2() {}
void lantern_log2_() {}
void lantern_log2_out() {}
void lantern_logdet() {}
void lantern_logspace() {}
void lantern_logspace_out() {}
void lantern_log_softmax() {}
void lantern_log_softmax() {}
void lantern__log_softmax() {}
void lantern__log_softmax_backward_data() {}
void lantern_logsumexp() {}
void lantern_logsumexp_out() {}
void lantern_logsumexp() {}
void lantern_logsumexp_out() {}
void lantern_margin_ranking_loss() {}
void lantern_matmul() {}
void lantern_matmul_out() {}
void lantern_matrix_rank() {}
void lantern_matrix_rank() {}
void lantern_matrix_power() {}
void lantern_max() {}
void lantern_max_out() {}
void lantern_max_values() {}
void lantern_max() {}
void lantern_max_out() {}
void lantern_max_values() {}
void lantern_max_pool1d_with_indices() {}
void lantern_max_pool1d() {}
void lantern_max_pool2d() {}
void lantern_mkldnn_max_pool2d() {}
void lantern_quantized_max_pool2d() {}
void lantern_max_pool3d() {}
void lantern_mean() {}
void lantern_mean() {}
void lantern_mean_out() {}
void lantern_mean() {}
void lantern_mean_out() {}
void lantern_median() {}
void lantern_median_out() {}
void lantern_median() {}
void lantern_median_out() {}
void lantern_min() {}
void lantern_min_out() {}
void lantern_min_values() {}
void lantern_min() {}
void lantern_min_out() {}
void lantern_min_values() {}
void lantern_mkldnn_convolution() {}
void lantern_mkldnn_convolution_backward_input() {}
void lantern_mkldnn_convolution_backward_weights() {}
void lantern_mkldnn_convolution_backward() {}
void lantern_miopen_batch_norm() {}
void lantern_miopen_batch_norm_backward() {}
void lantern_miopen_convolution() {}
void lantern_miopen_convolution_backward_input() {}
void lantern_miopen_convolution_backward() {}
void lantern_miopen_convolution_backward_bias() {}
void lantern_miopen_convolution_backward_weight() {}
void lantern_miopen_convolution_transpose() {}
void lantern_miopen_convolution_transpose_backward() {}
void lantern_miopen_convolution_transpose_backward_input() {}
void lantern_miopen_convolution_transpose_backward_weight() {}
void lantern_miopen_depthwise_convolution() {}
void lantern_miopen_depthwise_convolution_backward_input() {}
void lantern_miopen_depthwise_convolution_backward() {}
void lantern_miopen_depthwise_convolution_backward_weight() {}
void lantern_miopen_rnn() {}
void lantern_miopen_rnn_backward() {}
void lantern_mm() {}
void lantern_mm_out() {}
void lantern__sparse_mm() {}
void lantern_mode() {}
void lantern_mode_out() {}
void lantern_mode() {}
void lantern_mode_out() {}
void lantern_mul() {}
void lantern_mul_() {}
void lantern_mul_out() {}
void lantern_mul() {}
void lantern_mul_() {}
void lantern_mv() {}
void lantern_mv_out() {}
void lantern_mvlgamma() {}
void lantern_mvlgamma_() {}
void lantern_narrow_copy() {}
void lantern_narrow() {}
void lantern_native_batch_norm() {}
void lantern_batch_norm_stats() {}
void lantern_batch_norm_elemt() {}
void lantern_batch_norm_gather_stats() {}
void lantern_batch_norm_gather_stats_with_counts() {}
void lantern_native_batch_norm_backward() {}
void lantern_batch_norm_backward_reduce() {}
void lantern_batch_norm_backward_elemt() {}
void lantern_batch_norm_update_stats() {}
void lantern__nnpack_available() {}
void lantern__nnpack_spatial_convolution() {}
void lantern__nnpack_spatial_convolution_backward() {}
void lantern__nnpack_spatial_convolution_backward_input() {}
void lantern__nnpack_spatial_convolution_backward_weight() {}
void lantern_ones() {}
void lantern_ones() {}
void lantern_ones_out() {}
void lantern_ones_like() {}
void lantern_ones_like() {}
void lantern_pairwise_distance() {}
void lantern_cdist() {}
void lantern__cdist_backward() {}
void lantern_pdist() {}
void lantern__pdist_forward() {}
void lantern__pdist_backward() {}
void lantern_cosine_similarity() {}
void lantern_permute() {}
void lantern_numpy_t() {}
void lantern_pixel_shuffle() {}
void lantern_is_pinned() {}
void lantern_pin_memory() {}
void lantern_pinverse() {}
void lantern_poisson_nll_loss() {}
void lantern_scalar_tensor() {}
void lantern_rand() {}
void lantern_rand() {}
void lantern_rand() {}
void lantern_rand() {}
void lantern_rand_out() {}
void lantern_rand_out() {}
void lantern_rand_like() {}
void lantern_rand_like() {}
void lantern_randint() {}
void lantern_randint() {}
void lantern_randint() {}
void lantern_randint() {}
void lantern_randint_out() {}
void lantern_randint_out() {}
void lantern_randint_out() {}
void lantern_randint_out() {}
void lantern_randint_like() {}
void lantern_randint_like() {}
void lantern_randint_like() {}
void lantern_randint_like() {}
void lantern_randn() {}
void lantern_randn() {}
void lantern_randn() {}
void lantern_randn() {}
void lantern_randn_out() {}
void lantern_randn_out() {}
void lantern_randn_like() {}
void lantern_randn_like() {}
void lantern_randperm() {}
void lantern_randperm() {}
void lantern_randperm_out() {}
void lantern_randperm_out() {}
void lantern_range() {}
void lantern_range() {}
void lantern_range_out() {}
void lantern_reciprocal() {}
void lantern_reciprocal_() {}
void lantern_reciprocal_out() {}
void lantern_neg() {}
void lantern_neg_() {}
void lantern_neg_out() {}
void lantern_repeat() {}
void lantern_repeat_interleave() {}
void lantern_repeat_interleave() {}
void lantern_repeat_interleave() {}
void lantern_reshape() {}
void lantern__mkldnn_reshape() {}
void lantern_reshape_as() {}
void lantern_round() {}
void lantern_round_() {}
void lantern_round_out() {}
void lantern_rrelu() {}
void lantern_rrelu_() {}
void lantern_relu() {}
void lantern_relu_() {}
void lantern_prelu() {}
void lantern_prelu_backward() {}
void lantern_gelu() {}
void lantern_gelu_backward() {}
void lantern_hardshrink() {}
void lantern_hardshrink_backward() {}
void lantern_rsqrt() {}
void lantern_rsqrt_() {}
void lantern_rsqrt_out() {}
void lantern_select() {}
void lantern_select() {}
void lantern_selu() {}
void lantern_selu_() {}
void lantern_celu() {}
void lantern_celu_() {}
void lantern_sigmoid() {}
void lantern_sigmoid_() {}
void lantern_sigmoid_out() {}
void lantern_sin() {}
void lantern_sin_() {}
void lantern_sin_out() {}
void lantern_sinh() {}
void lantern_sinh_() {}
void lantern_sinh_out() {}
void lantern_detach() {}
void lantern_detach_() {}
void lantern_size() {}
void lantern_size() {}
void lantern_slice() {}
void lantern_slogdet() {}
void lantern_smm() {}
void lantern_softmax() {}
void lantern_softmax() {}
void lantern__softmax() {}
void lantern__softmax_backward_data() {}
void lantern_split() {}
void lantern_split_with_sizes() {}
void lantern_squeeze() {}
void lantern_squeeze() {}
void lantern_squeeze() {}
void lantern_squeeze_() {}
void lantern_squeeze_() {}
void lantern_squeeze_() {}
void lantern_sspaddmm() {}
void lantern_sspaddmm_out() {}
void lantern_stack() {}
void lantern_stack_out() {}
void lantern_stft() {}
void lantern_stride() {}
void lantern_stride() {}
void lantern_sum() {}
void lantern_sum() {}
void lantern_sum() {}
void lantern_sum_out() {}
void lantern_sum_out() {}
void lantern_sum_to_size() {}
void lantern_sqrt() {}
void lantern_sqrt_() {}
void lantern_sqrt_out() {}
void lantern_std() {}
void lantern_std() {}
void lantern_std_mean() {}
void lantern_std_mean() {}
void lantern_std_mean() {}
void lantern_std_out() {}
void lantern_std() {}
void lantern_std_out() {}
void lantern_prod() {}
void lantern_prod() {}
void lantern_prod_out() {}
void lantern_prod() {}
void lantern_prod_out() {}
void lantern_t() {}
void lantern_t_() {}
void lantern_tan() {}
void lantern_tan_() {}
void lantern_tan_out() {}
void lantern_tanh() {}
void lantern_tanh_() {}
void lantern_tanh_out() {}
void lantern_tensordot() {}
void lantern_threshold() {}
void lantern_threshold_() {}
void lantern_threshold_out() {}
void lantern_threshold_backward() {}
void lantern_transpose() {}
void lantern_transpose() {}
void lantern__mkldnn_transpose() {}
void lantern_transpose_() {}
void lantern__mkldnn_transpose_() {}
void lantern_one_hot() {}
void lantern_flip() {}
void lantern_roll() {}
void lantern_rot90() {}
void lantern_trapz() {}
void lantern_trapz() {}
void lantern__trilinear() {}
void lantern_triplet_margin_loss() {}
void lantern_trunc() {}
void lantern_trunc_() {}
void lantern_trunc_out() {}
void lantern_type_as() {}
void lantern__has_compatible_shallow_copy_type() {}
void lantern__unique() {}
void lantern_unique_dim() {}
void lantern_unique_consecutive() {}
void lantern_unique_dim_consecutive() {}
void lantern__unique2() {}
void lantern__unsafe_view() {}
void lantern_unsqueeze() {}
void lantern_unsqueeze_() {}
void lantern_var() {}
void lantern_var() {}
void lantern_var_out() {}
void lantern_var() {}
void lantern_var_out() {}
void lantern_var_mean() {}
void lantern_var_mean() {}
void lantern_var_mean() {}
void lantern_view_as() {}
void lantern_where() {}
void lantern_where() {}
void lantern__s_where() {}
void lantern_norm_except_dim() {}
void lantern__weight_norm() {}
void lantern__weight_norm_cuda_interface() {}
void lantern__weight_norm_cuda_interface_backward() {}
void lantern__weight_norm_differentiable_backward() {}
void lantern_zeros() {}
void lantern_zeros() {}
void lantern_zeros_out() {}
void lantern_zeros_like() {}
void lantern_zeros_like() {}
void lantern__standard_gamma_grad() {}
void lantern__standard_gamma() {}
void lantern__dirichlet_grad() {}
void lantern__sample_dirichlet() {}
void lantern_poisson() {}
void lantern_native_norm() {}
void lantern__sparse_sum() {}
void lantern__sparse_sum() {}
void lantern__sparse_sum() {}
void lantern__sparse_sum() {}
void lantern__sparse_sum_backward() {}
void lantern_norm() {}
void lantern_norm() {}
void lantern_norm() {}
void lantern_norm() {}
void lantern_norm_out() {}
void lantern_norm_out() {}
void lantern_norm() {}
void lantern_norm() {}
void lantern_norm_out() {}
void lantern_norm_out() {}
void lantern_frobenius_norm() {}
void lantern_frobenius_norm() {}
void lantern_frobenius_norm_out() {}
void lantern_nuclear_norm() {}
void lantern_nuclear_norm_out() {}
void lantern_nuclear_norm() {}
void lantern_nuclear_norm_out() {}
void lantern_clone() {}
void lantern_resize_as_() {}
void lantern_pow_out() {}
void lantern_pow() {}
void lantern_zero_() {}
void lantern_sub_out() {}
void lantern_sub() {}
void lantern_sub_() {}
void lantern_sub() {}
void lantern_sub_() {}
void lantern_rsub() {}
void lantern_rsub() {}
void lantern__sparse_addmm() {}
void lantern_addmm_out() {}
void lantern_addmm() {}
void lantern_addmm_() {}
void lantern_sparse_coo_tensor() {}
void lantern_sparse_coo_tensor() {}
void lantern_sparse_coo_tensor() {}
void lantern__sparse_coo_tensor_unsafe() {}
void lantern__sparse_coo_tensor_with_dims() {}
void lantern__sparse_coo_tensor_with_dims_and_tensors() {}
void lantern_sparse_resize_() {}
void lantern_sparse_resize_and_clear_() {}
void lantern_sparse_mask() {}
void lantern_to_dense() {}
void lantern_to_dense_backward() {}
void lantern_sparse_dim() {}
void lantern__dimi() {}
void lantern_dense_dim() {}
void lantern__dimv() {}
void lantern__nnz() {}
void lantern_coalesce() {}
void lantern_is_coalesced() {}
void lantern__indices() {}
void lantern__values() {}
void lantern__coalesced_() {}
void lantern_indices() {}
void lantern_values() {}
void lantern_hspmm_out() {}
void lantern_hspmm() {}
void lantern_copy_sparse_to_sparse_() {}
void lantern_numel() {}
void lantern_unbind() {}
void lantern_unbind() {}
void lantern_to_sparse() {}
void lantern_to_sparse() {}
void lantern_to_mkldnn() {}
void lantern_mkldnn_reorder_conv2d_weight() {}
void lantern_to_mkldnn_backward() {}
void lantern_quantize_per_tensor() {}
void lantern_quantize_per_channel() {}
void lantern_dequantize() {}
void lantern_q_scale() {}
void lantern_q_zero_point() {}
void lantern_q_per_channel_scales() {}
void lantern_q_per_channel_zero_points() {}
void lantern_q_per_channel_axis() {}
void lantern_int_repr() {}
void lantern__make_per_tensor_quantized_tensor() {}
void lantern__make_per_channel_quantized_tensor() {}
void lantern_qscheme() {}
void lantern_fake_quantize_per_tensor_affine() {}
void lantern_fake_quantize_per_tensor_affine_backward() {}
void lantern_fake_quantize_per_channel_affine() {}
void lantern_fake_quantize_per_channel_affine_backward() {}
void lantern_to() {}
void lantern_to() {}
void lantern_to() {}
void lantern_to() {}
void lantern_meshgrid() {}
void lantern_cartesian_prod() {}
void lantern_combinations() {}
void lantern_item() {}
void lantern_result_type() {}
void lantern_result_type() {}
void lantern_result_type() {}
void lantern_result_type() {}
void lantern_can_cast() {}
void lantern_promote_types() {}
void lantern__local_scalar_dense() {}
void lantern__thnn_fused_lstm_cell() {}
void lantern__thnn_fused_lstm_cell_backward() {}
void lantern__thnn_differentiable_lstm_cell_backward() {}
void lantern__thnn_fused_gru_cell() {}
void lantern__thnn_fused_gru_cell_backward() {}
void lantern__thnn_differentiable_gru_cell_backward() {}
void lantern_lstm() {}
void lantern_lstm() {}
void lantern_gru() {}
void lantern_gru() {}
void lantern_rnn_tanh() {}
void lantern_rnn_tanh() {}
void lantern_rnn_relu() {}
void lantern_rnn_relu() {}
void lantern_lstm_cell() {}
void lantern_gru_cell() {}
void lantern_rnn_tanh_cell() {}
void lantern_rnn_relu_cell() {}
void lantern_quantized_lstm() {}
void lantern_quantized_gru() {}
void lantern_quantized_gru() {}
void lantern_quantized_lstm_cell() {}
void lantern_quantized_gru_cell() {}
void lantern_quantized_rnn_relu_cell() {}
void lantern_quantized_rnn_tanh_cell() {}
void lantern__pack_padded_sequence() {}
void lantern__pack_padded_sequence_backward() {}
void lantern__pad_packed_sequence() {}
void lantern_set_() {}
void lantern_set_() {}
void lantern_set_() {}
void lantern_set_() {}
void lantern_set_quantizer_() {}
void lantern_is_set_to() {}
void lantern_masked_fill_() {}
void lantern_masked_fill() {}
void lantern_masked_fill_() {}
void lantern_masked_fill() {}
void lantern_masked_scatter_() {}
void lantern_masked_scatter() {}
void lantern_view() {}
void lantern_put_() {}
void lantern_index_add_() {}
void lantern_index_add() {}
void lantern_index_add() {}
void lantern_index_fill_() {}
void lantern_index_fill() {}
void lantern_index_fill_() {}
void lantern_index_fill() {}
void lantern_index_fill_() {}
void lantern_index_fill_() {}
void lantern_index_fill() {}
void lantern_index_fill() {}
void lantern_scatter_() {}
void lantern_scatter() {}
void lantern_scatter_() {}
void lantern_scatter() {}
void lantern_scatter() {}
void lantern_scatter() {}
void lantern_scatter_add_() {}
void lantern_scatter_add() {}
void lantern_scatter_add() {}
void lantern_lt_() {}
void lantern_lt_() {}
void lantern_gt_() {}
void lantern_gt_() {}
void lantern_le_() {}
void lantern_le_() {}
void lantern_ge_() {}
void lantern_ge_() {}
void lantern_eq_() {}
void lantern_eq_() {}
void lantern_ne_() {}
void lantern_ne_() {}
void lantern___and__() {}
void lantern___and__() {}
void lantern___iand__() {}
void lantern___iand__() {}
void lantern___or__() {}
void lantern___or__() {}
void lantern___ior__() {}
void lantern___ior__() {}
void lantern___xor__() {}
void lantern___xor__() {}
void lantern___ixor__() {}
void lantern___ixor__() {}
void lantern___lshift__() {}
void lantern___lshift__() {}
void lantern___ilshift__() {}
void lantern___ilshift__() {}
void lantern___rshift__() {}
void lantern___rshift__() {}
void lantern___irshift__() {}
void lantern___irshift__() {}
void lantern_lgamma_() {}
void lantern_atan2_() {}
void lantern_tril_() {}
void lantern_triu_() {}
void lantern_digamma_() {}
void lantern_polygamma_() {}
void lantern_renorm_() {}
void lantern_pow_() {}
void lantern_pow_() {}
void lantern_lerp_() {}
void lantern_lerp_() {}
void lantern_fmod_() {}
void lantern_fmod_() {}
void lantern_remainder_() {}
void lantern_remainder_() {}
void lantern_addbmm_() {}
void lantern_addbmm_out() {}
void lantern_addbmm() {}
void lantern_addcdiv_() {}
void lantern_random_() {}
void lantern_random_() {}
void lantern_random_() {}
void lantern_uniform_() {}
void lantern_normal_() {}
void lantern_cauchy_() {}
void lantern_log_normal_() {}
void lantern_exponential_() {}
void lantern_geometric_() {}
void lantern_diag_out() {}
void lantern_diag() {}
void lantern_cross_out() {}
void lantern_cross() {}
void lantern_triu_out() {}
void lantern_triu() {}
void lantern_tril_out() {}
void lantern_tril() {}
void lantern_tril_indices() {}
void lantern_triu_indices() {}
void lantern_trace() {}
void lantern_ne_out() {}
void lantern_ne() {}
void lantern_ne_out() {}
void lantern_ne() {}
void lantern_eq_out() {}
void lantern_eq() {}
void lantern_eq_out() {}
void lantern_eq() {}
void lantern_ge_out() {}
void lantern_ge() {}
void lantern_ge_out() {}
void lantern_ge() {}
void lantern_le_out() {}
void lantern_le() {}
void lantern_le_out() {}
void lantern_le() {}
void lantern_gt_out() {}
void lantern_gt() {}
void lantern_gt_out() {}
void lantern_gt() {}
void lantern_lt_out() {}
void lantern_lt() {}
void lantern_lt_out() {}
void lantern_lt() {}
void lantern_take_out() {}
void lantern_take() {}
void lantern_index_select_out() {}
void lantern_index_select() {}
void lantern_index_select_out() {}
void lantern_index_select() {}
void lantern_masked_select_out() {}
void lantern_masked_select() {}
void lantern_nonzero_out() {}
void lantern_nonzero() {}
void lantern_nonzero_numpy() {}
void lantern_gather_out() {}
void lantern_gather() {}
void lantern_gather_out() {}
void lantern_gather() {}
void lantern__gather_sparse_backward() {}
void lantern_addcmul_out() {}
void lantern_addcmul() {}
void lantern_addcmul_() {}
void lantern_addcdiv_out() {}
void lantern_addcdiv() {}
void lantern_lstsq_out() {}
void lantern_lstsq() {}
void lantern_triangular_solve_out() {}
void lantern_triangular_solve() {}
void lantern__triangular_solve_helper() {}
void lantern_symeig_out() {}
void lantern_symeig() {}
void lantern__symeig_helper() {}
void lantern_eig_out() {}
void lantern_eig() {}
void lantern_svd_out() {}
void lantern_svd() {}
void lantern__svd_helper() {}
void lantern_cholesky_out() {}
void lantern_cholesky() {}
void lantern__cholesky_helper() {}
void lantern_cholesky_solve_out() {}
void lantern_cholesky_solve() {}
void lantern__cholesky_solve_helper() {}
void lantern_solve() {}
void lantern_solve_out() {}
void lantern__solve_helper() {}
void lantern_cholesky_inverse_out() {}
void lantern_cholesky_inverse() {}
void lantern_qr_out() {}
void lantern_qr() {}
void lantern__qr_helper() {}
void lantern_geqrf_out() {}
void lantern_geqrf() {}
void lantern_orgqr_out() {}
void lantern_orgqr() {}
void lantern_ormqr_out() {}
void lantern_ormqr() {}
void lantern__lu_with_info() {}
void lantern_lu_solve_out() {}
void lantern_lu_solve() {}
void lantern__lu_solve_helper() {}
void lantern_multinomial_out() {}
void lantern_multinomial() {}
void lantern__multinomial_alias_setup() {}
void lantern__multinomial_alias_draw() {}
void lantern_lgamma_out() {}
void lantern_lgamma() {}
void lantern_digamma_out() {}
void lantern_digamma() {}
void lantern_polygamma_out() {}
void lantern_polygamma() {}
void lantern_erfinv() {}
void lantern_erfinv_() {}
void lantern_erfinv_out() {}
void lantern_sign() {}
void lantern_sign_() {}
void lantern_sign_out() {}
void lantern_dist() {}
void lantern_atan2_out() {}
void lantern_atan2() {}
void lantern_lerp_out() {}
void lantern_lerp_out() {}
void lantern_lerp() {}
void lantern_lerp() {}
void lantern_histc_out() {}
void lantern_histc() {}
void lantern_fmod_out() {}
void lantern_fmod() {}
void lantern_fmod_out() {}
void lantern_fmod() {}
void lantern_remainder_out() {}
void lantern_remainder() {}
void lantern_remainder_out() {}
void lantern_remainder() {}
void lantern_min_out() {}
void lantern_min() {}
void lantern_min() {}
void lantern_max_out() {}
void lantern_max() {}
void lantern_max() {}
void lantern_median() {}
void lantern_sort_out() {}
void lantern_sort() {}
void lantern_sort_out() {}
void lantern_sort() {}
void lantern_argsort() {}
void lantern_argsort() {}
void lantern_topk_out() {}
void lantern_topk() {}
void lantern_all() {}
void lantern_any() {}
void lantern_renorm_out() {}
void lantern_renorm() {}
void lantern_unfold() {}
void lantern_equal() {}
void lantern_pow_out() {}
void lantern_pow() {}
void lantern_pow_out() {}
void lantern_pow() {}
void lantern_normal_out() {}
void lantern_normal() {}
void lantern_normal_out() {}
void lantern_normal() {}
void lantern_normal_out() {}
void lantern_normal() {}
void lantern_normal() {}
void lantern_normal_out() {}
void lantern_alias() {}
void lantern__addr() {}
void lantern__addr_() {}
void lantern__addr_out() {}
void lantern__index_copy_() {}
void lantern__cumsum() {}
void lantern__cumsum_out() {}
void lantern__cumprod() {}
void lantern__cumprod_out() {}
void lantern__var() {}
void lantern__std() {}
void lantern__cat() {}
void lantern__cat_out() {}
void lantern__mode() {}
void lantern__mode_out() {}
void lantern__max() {}
void lantern__max_out() {}
void lantern__min() {}
void lantern__min_out() {}
void lantern_binary_cross_entropy_out() {}
void lantern_binary_cross_entropy() {}
void lantern_binary_cross_entropy_backward_out() {}
void lantern_binary_cross_entropy_backward() {}
void lantern_mse_loss_out() {}
void lantern_mse_loss() {}
void lantern_mse_loss_backward_out() {}
void lantern_mse_loss_backward() {}
void lantern_l1_loss_out() {}
void lantern_l1_loss() {}
void lantern_l1_loss_backward_out() {}
void lantern_l1_loss_backward() {}
void lantern_multi_margin_loss_out() {}
void lantern_multi_margin_loss() {}
void lantern_multi_margin_loss_backward_out() {}
void lantern_multi_margin_loss_backward() {}
void lantern_multilabel_margin_loss_out() {}
void lantern_multilabel_margin_loss() {}
void lantern_multilabel_margin_loss_forward_out() {}
void lantern_multilabel_margin_loss_forward() {}
void lantern_multilabel_margin_loss_backward_out() {}
void lantern_multilabel_margin_loss_backward() {}
void lantern_nll_loss_out() {}
void lantern_nll_loss() {}
void lantern_nll_loss_forward_out() {}
void lantern_nll_loss_forward() {}
void lantern_nll_loss_backward_out() {}
void lantern_nll_loss_backward() {}
void lantern_nll_loss2d_out() {}
void lantern_nll_loss2d() {}
void lantern_nll_loss2d_forward_out() {}
void lantern_nll_loss2d_forward() {}
void lantern_nll_loss2d_backward_out() {}
void lantern_nll_loss2d_backward() {}
void lantern_smooth_l1_loss_out() {}
void lantern_smooth_l1_loss() {}
void lantern_smooth_l1_loss_backward_out() {}
void lantern_smooth_l1_loss_backward() {}
void lantern_soft_margin_loss_out() {}
void lantern_soft_margin_loss() {}
void lantern_soft_margin_loss_backward_out() {}
void lantern_soft_margin_loss_backward() {}
void lantern_elu_out() {}
void lantern_elu() {}
void lantern_elu_backward_out() {}
void lantern_elu_backward() {}
void lantern_elu_() {}
void lantern_glu_out() {}
void lantern_glu() {}
void lantern_glu_backward_out() {}
void lantern_glu_backward() {}
void lantern_hardtanh_out() {}
void lantern_hardtanh() {}
void lantern_hardtanh_backward_out() {}
void lantern_hardtanh_backward() {}
void lantern_hardtanh_() {}
void lantern_leaky_relu_out() {}
void lantern_leaky_relu() {}
void lantern_leaky_relu_backward_out() {}
void lantern_leaky_relu_backward() {}
void lantern_leaky_relu_() {}
void lantern_log_sigmoid_out() {}
void lantern_log_sigmoid() {}
void lantern_log_sigmoid_forward_out() {}
void lantern_log_sigmoid_forward() {}
void lantern_log_sigmoid_backward_out() {}
void lantern_log_sigmoid_backward() {}
void lantern_rrelu_with_noise_out() {}
void lantern_rrelu_with_noise() {}
void lantern_rrelu_with_noise_backward_out() {}
void lantern_rrelu_with_noise_backward() {}
void lantern_rrelu_with_noise_() {}
void lantern_softplus_out() {}
void lantern_softplus() {}
void lantern_softplus_backward_out() {}
void lantern_softplus_backward() {}
void lantern_softshrink_out() {}
void lantern_softshrink() {}
void lantern_softshrink_backward_out() {}
void lantern_softshrink_backward() {}
void lantern_adaptive_avg_pool2d_out() {}
void lantern_adaptive_avg_pool2d() {}
void lantern_mkldnn_adaptive_avg_pool2d() {}
void lantern__adaptive_avg_pool2d() {}
void lantern__adaptive_avg_pool2d_backward() {}
void lantern_adaptive_avg_pool3d_out() {}
void lantern_adaptive_avg_pool3d() {}
void lantern_adaptive_avg_pool3d_backward_out() {}
void lantern_adaptive_avg_pool3d_backward() {}
void lantern_adaptive_max_pool2d_out() {}
void lantern_adaptive_max_pool2d() {}
void lantern_adaptive_max_pool2d_backward_out() {}
void lantern_adaptive_max_pool2d_backward() {}
void lantern_adaptive_max_pool3d_out() {}
void lantern_adaptive_max_pool3d() {}
void lantern_adaptive_max_pool3d_backward_out() {}
void lantern_adaptive_max_pool3d_backward() {}
void lantern_avg_pool2d_out() {}
void lantern_avg_pool2d() {}
void lantern_avg_pool2d_backward_out() {}
void lantern_avg_pool2d_backward() {}
void lantern_avg_pool3d_out() {}
void lantern_avg_pool3d() {}
void lantern_avg_pool3d_backward_out() {}
void lantern_avg_pool3d_backward() {}
void lantern_fractional_max_pool2d_out() {}
void lantern_fractional_max_pool2d() {}
void lantern_fractional_max_pool2d_backward_out() {}
void lantern_fractional_max_pool2d_backward() {}
void lantern_fractional_max_pool3d_out() {}
void lantern_fractional_max_pool3d() {}
void lantern_fractional_max_pool3d_backward_out() {}
void lantern_fractional_max_pool3d_backward() {}
void lantern_max_pool2d_with_indices_out() {}
void lantern_max_pool2d_with_indices() {}
void lantern_max_pool2d_with_indices_backward_out() {}
void lantern_max_pool2d_with_indices_backward() {}
void lantern_max_pool3d_with_indices_out() {}
void lantern_max_pool3d_with_indices() {}
void lantern_max_pool3d_with_indices_backward_out() {}
void lantern_max_pool3d_with_indices_backward() {}
void lantern_max_unpool2d_out() {}
void lantern_max_unpool2d() {}
void lantern_max_unpool2d_backward_out() {}
void lantern_max_unpool2d_backward() {}
void lantern_max_unpool3d_out() {}
void lantern_max_unpool3d() {}
void lantern_max_unpool3d_backward_out() {}
void lantern_max_unpool3d_backward() {}
void lantern_reflection_pad1d_out() {}
void lantern_reflection_pad1d() {}
void lantern_reflection_pad1d_backward_out() {}
void lantern_reflection_pad1d_backward() {}
void lantern_reflection_pad2d_out() {}
void lantern_reflection_pad2d() {}
void lantern_reflection_pad2d_backward_out() {}
void lantern_reflection_pad2d_backward() {}
void lantern_replication_pad1d_out() {}
void lantern_replication_pad1d() {}
void lantern_replication_pad1d_backward_out() {}
void lantern_replication_pad1d_backward() {}
void lantern_replication_pad2d_out() {}
void lantern_replication_pad2d() {}
void lantern_replication_pad2d_backward_out() {}
void lantern_replication_pad2d_backward() {}
void lantern_replication_pad3d_out() {}
void lantern_replication_pad3d() {}
void lantern_replication_pad3d_backward_out() {}
void lantern_replication_pad3d_backward() {}
void lantern_upsample_linear1d_out() {}
void lantern_upsample_linear1d() {}
void lantern_upsample_linear1d_backward_out() {}
void lantern_upsample_linear1d_backward() {}
void lantern_upsample_bilinear2d_out() {}
void lantern_upsample_bilinear2d() {}
void lantern_upsample_bilinear2d_backward_out() {}
void lantern_upsample_bilinear2d_backward() {}
void lantern_upsample_bicubic2d_out() {}
void lantern_upsample_bicubic2d() {}
void lantern_upsample_bicubic2d_backward_out() {}
void lantern_upsample_bicubic2d_backward() {}
void lantern_upsample_trilinear3d_out() {}
void lantern_upsample_trilinear3d() {}
void lantern_upsample_trilinear3d_backward_out() {}
void lantern_upsample_trilinear3d_backward() {}
void lantern_upsample_nearest1d_out() {}
void lantern_upsample_nearest1d() {}
void lantern_upsample_nearest1d_backward_out() {}
void lantern_upsample_nearest1d_backward() {}
void lantern_upsample_nearest2d_out() {}
void lantern_upsample_nearest2d() {}
void lantern_upsample_nearest2d_backward_out() {}
void lantern_upsample_nearest2d_backward() {}
void lantern_upsample_nearest3d_out() {}
void lantern_upsample_nearest3d() {}
void lantern_upsample_nearest3d_backward_out() {}
void lantern_upsample_nearest3d_backward() {}
void lantern_sigmoid_backward_out() {}
void lantern_sigmoid_backward() {}
void lantern_tanh_backward_out() {}
void lantern_tanh_backward() {}
void lantern_slow_conv_transpose2d_out() {}
void lantern_slow_conv_transpose2d() {}
void lantern_slow_conv_transpose2d_backward_out() {}
void lantern_slow_conv_transpose2d_backward() {}
void lantern_slow_conv_transpose3d_out() {}
void lantern_slow_conv_transpose3d() {}
void lantern_slow_conv_transpose3d_backward_out() {}
void lantern_slow_conv_transpose3d_backward() {}
void lantern_thnn_conv2d_out() {}
void lantern_thnn_conv2d() {}
void lantern_thnn_conv2d_forward_out() {}
void lantern_thnn_conv2d_forward() {}
void lantern_thnn_conv2d_backward_out() {}
void lantern_thnn_conv2d_backward() {}
void lantern_thnn_conv_depthwise2d_out() {}
void lantern_thnn_conv_depthwise2d() {}
void lantern_thnn_conv_depthwise2d_forward_out() {}
void lantern_thnn_conv_depthwise2d_forward() {}
void lantern_thnn_conv_depthwise2d_backward_out() {}
void lantern_thnn_conv_depthwise2d_backward() {}
void lantern_thnn_conv3d_out() {}
void lantern_thnn_conv3d() {}
void lantern_thnn_conv3d_forward_out() {}
void lantern_thnn_conv3d_forward() {}
void lantern_thnn_conv3d_backward_out() {}
void lantern_thnn_conv3d_backward() {}
void lantern_slow_conv_dilated2d() {}
void lantern_slow_conv_dilated2d_backward() {}
void lantern_slow_conv_dilated3d() {}
void lantern_slow_conv_dilated3d_backward() {}
void lantern_col2im_out() {}
void lantern_col2im() {}
void lantern_col2im_backward_out() {}
void lantern_col2im_backward() {}
void lantern_im2col_out() {}
void lantern_im2col() {}
void lantern_im2col_backward_out() {}
void lantern_im2col_backward() {}
*/
/* Autogen Body -- End */
