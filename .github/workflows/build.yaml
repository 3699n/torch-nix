name: Build

on: [push, deployment]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 3
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        include:
          - os: windows-latest
            library: lantern.dll
            test: |
              & './lanterntest.exe' '../install/lantern.dll'
            make: |
              & 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild' lantern.sln /t:Build /p:Configuration=Release
            build: build/Release
            libext: dll
          - os: ubuntu-latest
            library: liblantern.so
            test: ./lanterntest ../install/liblantern.so
            make: make
            build: build
            libext: so
          - os: macOS-latest
            library: liblantern.dylib
            test: ./lanterntest ../install/liblantern.dylib
            make: make
            build: build
            libext: dylib
    steps:
    - uses: actions/checkout@v2
    - name: Create environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Run cmake
      working-directory: ${{runner.workspace}}/build
      run: cmake ${{github.workspace}}
    - name: Run make
      working-directory: ${{runner.workspace}}/build
      run: ${{matrix.make}}
    - name: Install libs
      run: |
        cmake -E make_directory ${{runner.workspace}}/test
        cmake -E copy ${{runner.workspace}}/${{matrix.build}}/lanterntest* test/
        cmake -E make_directory ${{runner.workspace}}/install
        cmake -E copy ${{runner.workspace}}/${{matrix.build}}/${{matrix.library}} ${{runner.workspace}}/install/${{matrix.library}}
        cmake -E copy libtorch/lib/*.${{matrix.libext}} ${{runner.workspace}}/install
        cmake -E remove_directory ${{runner.workspace}}/${{matrix.build}}
        cmake -E remove_directory libtorch
    - name: Test library
      working-directory: ${{runner.workspace}}/test
      run: ${{matrix.test}}
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{runner.os}}
        path: ${{runner.workspace}}/install/${{matrix.library}}
