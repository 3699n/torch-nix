name: Build

on: [push, deployment]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        include:
          - os: windows-latest
            library: lantern.dll
            test: lanterntest.exe
          - os: ubuntu-latest
            library: liblantern.so
            test: ./lanterntest
          - os: macOS-latest
            library: liblantern.dylib
            test: ./lanterntest
    steps:
    - uses: actions/checkout@v2
    - name: environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: cmake
      working-directory: ${{runner.workspace}}/build
      run: cmake ${{github.workspace}}
    - name: make
      if: runner.os != 'Windows'
      working-directory: ${{runner.workspace}}/build
      run: make
    - name: devenv
      if: runner.os == 'Windows'
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run:
        - echo %cd%
        - "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/Tools/VsMSBuildCmd.bat"
        - echo %cd%
        - dir "D:/a/lantern/build"
        - devenv CMake.sln /build release
        - dir "D:/a/lantern/build"
    - name: test
      working-directory: ${{runner.workspace}}/build
      run: ${{matrix.test}}
    - name: upload
      uses: actions/upload-artifact@v1
      with:
        name: ${{runner.os}}
        path: ${{runner.workspace}}/build/${{matrix.library}}