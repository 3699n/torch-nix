on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:


name: Test

jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-18.04", "macos-latest", "windows-latest"]
        r_version: ["release"]
        include:
          - os: ubuntu-18.04
            cran: https://demo.rstudiopm.com/all/__linux__/bionic/latest
            install: 0
            r_version: "release"
          - os: macos-latest
            install: 1
            r_version: "release"
          - os: windows-latest
            install: 1
            r_version: "release"
          - os: windows-latest
            install: 1
            r_version: "3.6"
            
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (${{ matrix.r_version }})
    timeout-minutes: 120
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      INSTALL_TORCH: ${{ matrix.install }}
      CRAN: ${{ matrix.cran }}
      TORCH_LOG: 2
      TORCH_TEST: 1
      TORCH_INSTALL: 1

    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r_version }}
      - uses: r-lib/actions/setup-pandoc@master
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages(c('remotes'))" -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: Install dependencies
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Build lantern and get libtorch
        if: matrix.install == 0 || contains( github.event.pull_request.labels.*.name, 'lantern')
        run: | 
          Rscript tools/buildlantern.R
      - name: Check
        run:  |
          rcmdcheck::rcmdcheck(args = c("--no-multiarch", "--no-manual"), error_on = "error", check_dir = "check")
        shell: Rscript {0}
      - name: Install
        run: |
          torch_package <- dir("check", full.names = TRUE, pattern = "torch_")
          install.packages(torch_package, repos = NULL, type = "source", INSTALL_opts = "--no-multiarch")
        shell: Rscript {0}
      - name: Test
        run: |
          setwd("tests")
          source("testthat.R")
        shell: Rscript {0}
      - name: Logs
        if: ${{ failure() }}
        run: cat lantern.log
  gpu:
    strategy:
      fail-fast: false
      matrix: 
        cuda: ["101", "102", "092", "110"]
    runs-on: [self-hosted, linux]
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: https://demo.rstudiopm.com/all/__linux__/bionic/latest
      DOCKER_FILE: ${{ format('docker/cuda-{0}', matrix.cuda) }}
      DOCKER_TAG: ${{ format('torch{0}', matrix.cuda) }}
      TORCH_TEST: 1
      TORCH_INSTALL: 1
      BUILD_LANTERN: ${{ contains( github.event.pull_request.labels.*.name, 'lantern') }}
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -f $DOCKER_FILE -t $DOCKER_TAG .
      - name: Run checks
        run: docker run --rm --gpus all -e BUILD_LANTERN $DOCKER_TAG sh torch/tools/check.sh
  
  start-runner:
    runs-on: ubuntu-18.04
    steps:
    - name: Create runner instance
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
      with: 
        args: compute --project=rstudio-cloudml instances create runner --zone=us-central1-a --machine-type=n1-standard-2 --subnet=default --network-tier=PREMIUM --metadata=^,@^windows-keys=\{\"expireOn\":\"2021-03-29T13:37:32.555Z\",\"userName\":\"daniel\",\"modulus\":\"sTaacxXqsMpLND6BtgiZiK9QEeuvJH61ZVYPzSIu8RHebxoOeRoYBh1gk/jszOrt3\+390AmQ2QVO3LAthsJkbWHyQ3h/aR7b2jNfDf44NPvvHAJSxhHTT2pMgr9iAlZ9oTYedKtcmizn8ECvDJ7GweK8mDbesgiS5yX\+\+VXgETC3FcjIJQTFHc7saA\+ZdL6HbwuiEMnAb3XiXppgENPGf/ZTNcW3p8mmficZBNNxkPPRwPYj17IFnFUgFPG3FzoTEUwcyPjSwSVEW73dnqMpaQtx/U95ILAzG9PSpyk3gZgXKmUI6\+5De9fkLzFm0LbBouQFYLM9ehaujLh0lbFSYQ\\u003d\\u003d\",\"email\":\"daniel@rstudio.com\",\"exponent\":\"AQAB\"\} --maintenance-policy=TERMINATE --service-account=226719675476-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append --accelerator=type=nvidia-tesla-k80,count=1 --min-cpu-platform=Automatic --enable-display-device --tags=http-server,https-server --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any
        
  delete-runner:
    if: always()
    needs: ['windows-gpu', 'start-runner'] 
    runs-on: ubuntu-18.04
    steps:
    - name: Delete runner instance
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
      with:
        args: compute --project=rstudio-cloudml instances delete runner
 
  windows-gpu:
    needs: ['start-runner']
    strategy:
      fail-fast: false
      matrix:
        r_version: ["release"]
        cuda: ["10.2"]
            
    runs-on: [self-hosted, windows]
    name: ${{ matrix.cuda }} 
    timeout-minutes: 120
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      INSTALL_TORCH: 1
      TORCH_LOG: 2
      TORCH_TEST: 1
      TORCH_INSTALL: 1
      CUDA: ${{ matrix.cuda }}
      
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r_version }}
      - uses: r-lib/actions/setup-pandoc@master
      - name: Install dependencies
        run: | 
          Rscript -e "options(repos=structure(c(CRAN='https://cloud.r-project.org/'))); install.packages(c('remotes', 'rcmdcheck', 'fs'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Build lantern and get libtorch
        if: matrix.install == 0 || contains( github.event.pull_request.labels.*.name, 'lantern')
        run: | 
          Rscript tools/buildlantern.R
      - name: Check
        run:  |
          rcmdcheck::rcmdcheck(args = c("--no-multiarch", "--no-manual"), error_on = "error", check_dir = "check")
        shell: Rscript {0}
