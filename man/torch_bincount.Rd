% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_bincount}
\alias{torch_bincount}
\title{Bincount}
\arguments{
\item{input}{(Tensor) 1-d int tensor}

\item{weights}{(Tensor) optional, weight for each value in the input tensor.}

\item{Should}{NA}

\item{minlength}{(int) optional, minimum number of bins. Should be non-negative.}
}
\description{
bincount(input, weights=None, minlength=0) -> Tensor
}
\details{
Count the frequency of each value in an array of non-negative ints.

The number of bins (size 1) is one larger than the largest value in
:attr:\code{input} unless :attr:\code{input} is empty, in which case the result is a
tensor of size 0. If :attr:\code{minlength} is specified, the number of bins is at least
:attr:\code{minlength} and if :attr:\code{input} is empty, then the result is tensor of size
:attr:\code{minlength} filled with zeros. If \code{n} is the value at position \code{i},
\verb{out[n] += weights[i]} if :attr:\code{weights} is specified else
\verb{out[n] += 1}.

.. include:: cuda_deterministic.rst

Arguments:
input (Tensor): 1-d int tensor
weights (Tensor): optional, weight for each value in the input tensor.
Should be of same size as input tensor.
minlength (int): optional, minimum number of bins. Should be non-negative.

Returns:
output (Tensor): a tensor of shape \verb{Size([max(input) + 1])} if
:attr:\code{input} is non-empty, else \code{Size(0)}

Example::
}
