% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_cholesky_solve}
\alias{torch_cholesky_solve}
\title{Cholesky_solve}
\arguments{
\item{input}{(Tensor) input matrix :math:\code{b} of size :math:\verb{(*, m, k)},                where :math:\code{*} is zero or more batch dimensions}

\item{input2}{(Tensor) input matrix :math:\code{u} of size :math:\verb{(*, m, m)},                where :math:\code{*} is zero of more batch dimensions composed of                upper or lower triangular Cholesky factor}

\item{upper}{(bool, optional) whether to consider the Cholesky factor as a                            lower or upper triangular matrix. Default: \code{False}.}

\item{out}{(Tensor, optional) the output tensor for \code{c}}
}
\description{
cholesky_solve(input, input2, upper=False, out=None) -> Tensor
}
\details{
Solves a linear system of equations with a positive semidefinite
matrix to be inverted given its Cholesky factor matrix :math:\code{u}.

If \code{upper} is \code{False}, :math:\code{u} is and lower triangular and \code{c} is
returned such that:

\deqn{
    c = (u u^T)^{{-1}} b
}
If \code{upper} is \code{True} or not provided, :math:\code{u} is upper triangular
and \code{c} is returned such that:

\deqn{
    c = (u^T u)^{{-1}} b
}
\code{torch_cholesky_solve(b, u)} can take in 2D inputs \verb{b, u} or inputs that are
batches of 2D matrices. If the inputs are batches, then returns
batched outputs \code{c}
}
\examples{
\dontrun{
a = torch_randn(3, 3)
a = torch_mm(a, a.t()) # make symmetric positive definite
u = torch_cholesky(a)
a
b = torch_randn(3, 2)
b
torch_cholesky_solve(b, u)
torch_mm(a.inverse(), b)
}

}
