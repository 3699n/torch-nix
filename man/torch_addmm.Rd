% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_addmm}
\alias{torch_addmm}
\title{Addmm}
\arguments{
\item{beta}{(Number, optional) multiplier for \code{input} (\eqn{\beta})}

\item{input}{(Tensor) matrix to be added}

\item{alpha}{(Number, optional) multiplier for \eqn{mat1 @ mat2} (\eqn{\alpha})}

\item{mat1}{(Tensor) the first matrix to be multiplied}

\item{mat2}{(Tensor) the second matrix to be multiplied}

\item{out}{(Tensor, optional) the output tensor.}
}
\description{
Performs a matrix multiplication of the matrices \code{mat1} and \code{mat2}.
The matrix \code{input} is added to the final result.
}
\details{
If \code{mat1} is a \eqn{(n \times m)} tensor, \code{mat2} is a
\eqn{(m \times p)} tensor, then \code{input} must be
broadcastable  with a \eqn{(n \times p)} tensor
and \code{out} will be a \eqn{(n \times p)} tensor.

\code{alpha} and \code{beta} are scaling factors on matrix-vector product between
\code{mat1} and \code{mat2} and the added matrix \code{input} respectively.

\deqn{
    \text{out} = \beta\ \text{input} + \alpha\ (\text{mat1}_i \mathbin{@} \text{mat2}_i)
}
For inputs of type \code{FloatTensor} or \code{DoubleTensor}, arguments \code{beta} and
\code{alpha} must be real numbers, otherwise they should be integers.
}
\section{Signatures}{


addmm(beta=1, input, alpha=1, mat1, mat2, out=None) -> Tensor
}

\examples{
\dontrun{
M = torch_randn(c(2, 3))
mat1 = torch_randn(c(2, 3))
mat2 = torch_randn(c(3, 3))
torch_addmm(M, mat1, mat2)
}

}
