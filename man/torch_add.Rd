% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_add}
\alias{torch_add}
\title{Add}
\arguments{
\item{value}{(Number) the number to be added to each element of :attr:\code{input}}

\item{input}{(Tensor) the first input tensor}

\item{alpha}{(Number) the scalar multiplier for :attr:\code{other}}

\item{other}{(Tensor) the second input tensor}
}
\description{
add(input, other, out=None)

add(input, alpha=1, other, out=None)
}
\details{
Adds the scalar :attr:\code{other} to each element of the input :attr:\code{input}
and returns a new resulting tensor.

.. math::
\text{out} = \text{input} + \text{other}

If :attr:\code{input} is of type FloatTensor or DoubleTensor, :attr:\code{other} must be
a real number, otherwise it should be an integer.

Each element of the tensor :attr:\code{other} is multiplied by the scalar
:attr:\code{alpha} and added to each element of the tensor :attr:\code{input}.
The resulting tensor is returned.

The shapes of :attr:\code{input} and :attr:\code{other} must be
:ref:\verb{broadcastable <broadcasting-semantics>}.

.. math::
\text{out} = \text{input} + \text{alpha} \times \text{other}

If :attr:\code{other} is of type FloatTensor or DoubleTensor, :attr:\code{alpha} must be
a real number, otherwise it should be an integer.
}
\examples{
\dontrun{
a = torch_randn(4)
a
torch_add(a, 20)
}

\dontrun{
a = torch_randn(4)
a
b = torch_randn(4, 1)
b
torch_add(a, 10, b)
}

}
