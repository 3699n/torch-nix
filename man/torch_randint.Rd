% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_randint}
\alias{torch_randint}
\title{Randint}
\arguments{
\item{low}{(int, optional) Lowest integer to be drawn from the distribution. Default: 0.}

\item{high}{(int) One above the highest integer to be drawn from the distribution.}

\item{size}{(tuple) a tuple defining the shape of the output tensor.}

\item{generator}{(:class:\code{torch.Generator}, optional) a pseudorandom number generator for sampling}

\item{out}{(Tensor, optional) the output tensor.}

\item{dtype}{(:class:\code{torch.dtype}, optional) the desired data type of returned tensor.        Default: if \code{None}, uses a global default (see :func:\code{torch.set_default_tensor_type}).}

\item{layout}{(:class:\code{torch.layout}, optional) the desired layout of returned Tensor.        Default: \code{torch.strided}.}

\item{device}{(:class:\code{torch.device}, optional) the desired device of returned tensor.        Default: if \code{None}, uses the current device for the default tensor type        (see :func:\code{torch.set_default_tensor_type}). :attr:\code{device} will be the CPU        for CPU tensor types and the current CUDA device for CUDA tensor types.}

\item{requires_grad}{(bool, optional) If autograd should record operations on the        returned tensor. Default: \code{False}.}
}
\description{
randint(low=0, high, size, *, generator=None, out=None, dtype=None, layout=torch.strided, device=None, requires_grad=False) -> Tensor
}
\details{
Returns a tensor filled with random integers generated uniformly
between :attr:\code{low} (inclusive) and :attr:\code{high} (exclusive).

The shape of the tensor is defined by the variable argument :attr:\code{size}.

.. note:
With the global dtype default (\code{torch.float32}), this function returns
a tensor with dtype \code{torch.int64}.
}
