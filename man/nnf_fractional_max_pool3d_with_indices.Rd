% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-nn-functional-docs.R,
%   R/gen-nn-functional-examples.R
\name{nnf_fractional_max_pool3d_with_indices}
\alias{nnf_fractional_max_pool3d_with_indices}
\title{Fractional_max_pool3d_with_indices}
\arguments{
\item{kernel_size}{NA the size of the window to take a max over.                 Can be a single number \eqn{k} (for a square kernel of \eqn{k \times k \times k})                 or a tuple \verb{(kT, kH, kW)}}

\item{output_size}{NA the target output size of the form \eqn{oT \times oH \times oW}.                 Can be a tuple \verb{(oT, oH, oW)} or a single number \eqn{oH} for a cubic output                  \eqn{oH \times oH \times oH}}

\item{output_ratio}{NA If one wants to have an output size as a ratio of the input size, this option can be given.                  This has to be a number or tuple in the range (0, 1)}

\item{return_indices}{NA if \code{True}, will return the indices along with the outputs.                    Useful to pass to \code{\link{~torch.nn.functional.max_unpool3d}}.}
}
\description{
Applies 3D fractional max pooling over an input signal composed of several input planes.
}
\details{
\preformatted{Fractional MaxPooling is described in detail in the paper `Fractional MaxPooling`_ by Ben Graham

The max-pooling operation is applied in \eqn{kT \times kH \times kW} regions by a stochastic
step size determined by the target output size.
The number of output features is equal to the number of input planes.
}
}
\examples{

input = torch_randn(c(20, 16, 50, 32, 16))
# pool of cubic window of size=3, and target output size 13x12x11
F$fractional_max_pool3d(input, 3, output_size=list(13, 12, 11))
# pool of cubic window and target output size being half of input size
F$fractional_max_pool3d(input, 3, output_ratio=list(0.5, 0.5, 0.5))
}
