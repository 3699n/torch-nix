% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-nn-functional-docs.R,
%   R/gen-nn-functional-examples.R
\name{nnf_upsample}
\alias{nnf_upsample}
\title{Upsample}
\arguments{
\item{input}{(Tensor) the input tensor}

\item{size}{(int or Tuple\link{int} or Tuple\link{int, int} or Tuple\link{int, int, int}) output spatial size.}

\item{scale_factor}{(float or Tuple\link{float}) multiplier for spatial size. Has to be an integer.}

\item{mode}{(string) algorithm used for upsampling:        \code{'nearest'} | \code{'linear'} | \code{'bilinear'} | \code{'bicubic'} |        \code{'trilinear'}. Default: \code{'nearest'}}

\item{align_corners}{(bool, optional) Geometrically, we consider the pixels of the        input and output as squares rather than points.        If set to \code{True}, the input and output tensors are aligned by the        center points of their corner pixels, preserving the values at the corner pixels.        If set to \code{False}, the input and output tensors are aligned by the corner        points of their corner pixels, and the interpolation uses edge value padding        for out-of-boundary values, making this operation \emph{independent} of input size        when \code{scale_factor} is kept the same. This only has an effect when \code{mode}        is \code{'linear'}, \code{'bilinear'}, \code{'bicubic'} or \code{'trilinear'}.        Default: \code{False}}
}
\description{
Upsamples the input to either the given \code{size} or the given
\code{scale_factor}
}
\details{
\preformatted{.. warning::
    This function is deprecated in favor of [`torch_nn.functional.interpolate`].
    This is equivalent with ``nn.functional.interpolate(...)``.

.. include:: cuda_deterministic_backward.rst

The algorithm used for upsampling is determined by `mode`.

Currently temporal, spatial and volumetric upsampling are supported, i.e.
expected inputs are 3-D, 4-D or 5-D in shape.

The input dimensions are interpreted in the form:
`mini-batch x channels x [optional depth] x [optional height] x width`.

The modes available for upsampling are: `nearest`, `linear` (3D-only),
`bilinear`, `bicubic` (4D-only), `trilinear` (5D-only)
}
}
\examples{


}
