% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_baddbmm}
\alias{torch_baddbmm}
\title{Baddbmm}
\arguments{
\item{beta}{(Number, optional) multiplier for \code{input} (\eqn{\beta})}

\item{input}{(Tensor) the tensor to be added}

\item{alpha}{(Number, optional) multiplier for \eqn{\text{batch1} \mathbin{@} \text{batch2}} (\eqn{\alpha})}

\item{batch1}{(Tensor) the first batch of matrices to be multiplied}

\item{batch2}{(Tensor) the second batch of matrices to be multiplied}

\item{out}{(Tensor, optional) the output tensor.}
}
\description{
Performs a batch matrix-matrix product of matrices in \code{batch1}
and \code{batch2}.
\code{input} is added to the final result.
}
\details{
\code{batch1} and \code{batch2} must be 3-D tensors each containing the same
number of matrices.

If \code{batch1} is a \eqn{(b \times n \times m)} tensor, \code{batch2} is a
\eqn{(b \times m \times p)} tensor, then \code{input} must be
broadcastable  with a
\eqn{(b \times n \times p)} tensor and \code{out} will be a
\eqn{(b \times n \times p)} tensor. Both \code{alpha} and \code{beta} mean the
same as the scaling factors used in \code{torch_addbmm}.

\deqn{
    \text{out}_i = \beta\ \text{input}_i + \alpha\ (\text{batch1}_i \mathbin{@} \text{batch2}_i)
}
For inputs of type \code{FloatTensor} or \code{DoubleTensor}, arguments \code{beta} and
\code{alpha} must be real numbers, otherwise they should be integers.
}
\section{Signatures}{


baddbmm(beta=1, input, alpha=1, batch1, batch2, out=None) -> Tensor
}

\examples{
\dontrun{
M = torch_randn(10, 3, 5)
batch1 = torch_randn(10, 3, 4)
batch2 = torch_randn(10, 4, 5)
torch_baddbmm(M, batch1, batch2).size()
}

}
