% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_addbmm}
\alias{torch_addbmm}
\title{Addbmm}
\arguments{
\item{beta}{(Number, optional) multiplier for :attr:\code{input} (:math:\verb{\\beta})}

\item{input}{(Tensor) matrix to be added}

\item{alpha}{(Number, optional) multiplier for \code{batch1 @ batch2} (:math:\verb{\\alpha})}

\item{batch1}{(Tensor) the first batch of matrices to be multiplied}

\item{batch2}{(Tensor) the second batch of matrices to be multiplied}

\item{out}{(Tensor, optional) the output tensor.}
}
\description{
addbmm(beta=1, input, alpha=1, batch1, batch2, out=None) -> Tensor
}
\details{
Performs a batch matrix-matrix product of matrices stored
in :attr:\code{batch1} and :attr:\code{batch2},
with a reduced add step (all matrix multiplications get accumulated
along the first dimension).
:attr:\code{input} is added to the final result.

:attr:\code{batch1} and :attr:\code{batch2} must be 3-D tensors each containing the
same number of matrices.

If :attr:\code{batch1} is a :math:\verb{(b \\times n \\times m)} tensor, :attr:\code{batch2} is a
:math:\verb{(b \\times m \\times p)} tensor, :attr:\code{input} must be
:ref:\verb{broadcastable <broadcasting-semantics>} with a :math:\verb{(n \\times p)} tensor
and :attr:\code{out} will be a :math:\verb{(n \\times p)} tensor.

.. math::
out = \beta\ \text{input} + \alpha\ (\sum_{i=0}^{b-1} \text{batch1}_i \mathbin{@} \text{batch2}_i)

For inputs of type \code{FloatTensor} or \code{DoubleTensor}, arguments :attr:\code{beta} and :attr:\code{alpha}
must be real numbers, otherwise they should be integers.
}
\examples{
\dontrun{
M = torch_randn(3, 5)
batch1 = torch_randn(10, 3, 4)
batch2 = torch_randn(10, 4, 5)
torch_addbmm(M, batch1, batch2)
}

}
