% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-nn-functional-examples.R, R/nnf-padding.R
\name{nnf_pad}
\alias{nnf_pad}
\title{Pad}
\usage{
nnf_pad(input, pad, mode = "constant", value = 0)
}
\arguments{
\item{input}{(Tensor) N-dimensional tensor}

\item{pad}{(tuple) m-elements tuple, where \eqn{\frac{m}{2} \leq} input dimensions
and \eqn{m} is even.}

\item{mode}{'constant', 'reflect', 'replicate' or 'circular'. Default: 'constant'}

\item{value}{fill value for 'constant' padding. Default: 0.}
}
\description{
Pads tensor.
}
\section{Padding size}{


The padding size by which to pad some dimensions of \code{input}
are described starting from the last dimension and moving forward.
\eqn{\left\lfloor\frac{\text{len(pad)}}{2}\right\rfloor} dimensions
of \code{input} will be padded.
For example, to pad only the last dimension of the input tensor, then
\code{pad} has the form
\eqn{(\text{padding\_left}, \text{padding\_right})};
to pad the last 2 dimensions of the input tensor, then use
\eqn{(\text{padding\_left}, \text{padding\_right},}
\eqn{\text{padding\_top}, \text{padding\_bottom})};
to pad the last 3 dimensions, use
\eqn{(\text{padding\_left}, \text{padding\_right},}
\eqn{\text{padding\_top}, \text{padding\_bottom}}
\eqn{\text{padding\_front}, \text{padding\_back})}.
}

\section{Padding mode}{


See \code{nn_constant_pad_2d}, \code{nn_reflection_pad_2d}, and
\code{nn_replication_pad_2d} for concrete examples on how each of the
padding modes works. Constant padding is implemented for arbitrary dimensions.
tensor, or the last 2 dimensions of 4D input tensor, or the last dimension of
3D input tensor. Reflect padding is only implemented for padding the last 2
dimensions of 4D input tensor, or the last dimension of 3D input tensor.
}

\examples{

t4d = torch_empty(3, 3, 4, 2)
p1d = list(1, 1) # pad last dim by 1 on each side
out = F$pad(t4d, p1d, "constant", 0)  # effectively zero padding
print(out$size())
p2d = list(1, 1, 2, 2) # pad last dim by list(1, 1) and 2nd to last by list(2, 2)
out = F$pad(t4d, p2d, "constant", 0)
print(out$size())
t4d = torch_empty(3, 3, 4, 2)
p3d = list(0, 1, 2, 1, 3, 3) # pad by list(0, 1), list(2, 1), and list(3, 3)
out = F$pad(t4d, p3d, "constant", 0)
print(out$size())
}
