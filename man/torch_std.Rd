% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_std}
\alias{torch_std}
\title{Std}
\arguments{
\item{input}{(Tensor) the input tensor.}

\item{dim}{(int or tuple of ints) the dimension or dimensions to reduce.}

\item{keepdim}{(bool) whether the output tensor has :attr:\code{dim} retained or not.}

\item{unbiased}{(bool) whether to use the unbiased estimation or not}

\item{out}{(Tensor, optional) the output tensor.}
}
\description{
std(input, unbiased=True) -> Tensor

std(input, dim, keepdim=False, unbiased=True, out=None) -> Tensor
}
\details{
Returns the standard-deviation of all elements in the \code{input} tensor.

If \code{unbiased} is \code{False}, then the standard-deviation will be calculated
via the biased estimator. Otherwise, Bessel's correction will be used.

Returns the standard-deviation of each row of the \code{input} tensor in the
dimension \code{dim}. If \code{dim} is a list of dimensions,
reduce over all of them.

If \code{keepdim} is \code{True}, the output tensor is of the same size
as \code{input} except in the dimension(s) \code{dim} where it is of size 1.
Otherwise, \code{dim} is squeezed (see \code{\link{torch_squeeze}}), resulting in the
output tensor having 1 (or \code{len(dim)}) fewer dimension(s).

If \code{unbiased} is \code{False}, then the standard-deviation will be calculated
via the biased estimator. Otherwise, Bessel's correction will be used.
}
\examples{
\dontrun{
a = torch_randn(1, 3)
a
torch_std(a)
}

\dontrun{
a = torch_randn(4, 4)
a
torch_std(a, dim=1)
}

}
