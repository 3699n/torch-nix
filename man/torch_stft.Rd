% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-namespace-docs.R
\name{torch_stft}
\alias{torch_stft}
\title{Stft}
\arguments{
\item{input}{(Tensor) the input tensor}

\item{n_fft}{(int) size of Fourier transform}

\item{hop_length}{(int, optional) the distance between neighboring sliding window        frames. Default: \code{None} (treated as equal to \code{floor(n_fft / 4)})}

\item{win_length}{(int, optional) the size of window frame and STFT filter.        Default: \code{None}  (treated as equal to :attr:\code{n_fft})}

\item{window}{(Tensor, optional) the optional window function.        Default: \code{None} (treated as window of all :math:\code{1} s)}

\item{center}{(bool, optional) whether to pad :attr:\code{input} on both sides so        that the :math:\code{t}-th frame is centered at time :math:\verb{t \\times \\text\{hop\\_length\}}.        Default: \code{True}}

\item{pad_mode}{(string, optional) controls the padding method used when        :attr:\code{center} is \code{True}. Default: \code{"reflect"}}

\item{normalized}{(bool, optional) controls whether to return the normalized STFT results         Default: \code{False}}

\item{onesided}{(bool, optional) controls whether to return half of results to        avoid redundancy Default: \code{True}}
}
\description{
Short-time Fourier transform (STFT).
}
\details{
\preformatted{Ignoring the optional batch dimension, this method computes the following
expression:

.. math::
    X[m, \\omega] = \\sum_\{k = 0\}^\{\\text\{win\\_length-1\}\}\%
                        \\text\{window\}[k]\\ \\text\{input\}[m \\times \\text\{hop\\_length\} + k]\\ \%
                        \\exp\\left(- j \\frac\{2 \\pi \\cdot \\omega k\}\{\\text\{win\\_length\}\}\\right),

where :math:`m` is the index of the sliding window, and :math:`\\omega` is
the frequency that :math:`0 \\leq \\omega < \\text\{n\\_fft\}`. When
`onesided` is the default value ``True``,

* `input` must be either a 1-D time sequence or a 2-D batch of time
  sequences.

* If `hop_length` is ``None`` (default), it is treated as equal to
  ``floor(n_fft / 4)``.

* If `win_length` is ``None`` (default), it is treated as equal to
  `n_fft`.

* `window` can be a 1-D tensor of size `win_length`, e.g., from
  :meth:`torch_hann_window`. If `window` is ``None`` (default), it is
  treated as if having :math:`1` everywhere in the window. If
  :math:`\\text\{win\\_length\} < \\text\{n\\_fft\}`, `window` will be padded on
  both sides to length `n_fft` before being applied.

* If `center` is ``True`` (default), `input` will be padded on
  both sides so that the :math:`t`-th frame is centered at time
  :math:`t \\times \\text\{hop\\_length\}`. Otherwise, the :math:`t`-th frame
  begins at time  :math:`t \\times \\text\{hop\\_length\}`.

* `pad_mode` determines the padding method used on `input` when
  `center` is ``True``. See :meth:`torch_nn.functional.pad` for
  all available options. Default is ``"reflect"``.

* If `onesided` is ``True`` (default), only values for :math:`\\omega`
  in :math:`\\left[0, 1, 2, \\dots, \\left\\lfloor \\frac\{\\text\{n\\_fft\}\}\{2\} \\right\\rfloor + 1\\right]`
  are returned because the real-to-complex Fourier transform satisfies the
  conjugate symmetry, i.e., :math:`X[m, \\omega] = X[m, \\text\{n\\_fft\} - \\omega]^*`.

* If `normalized` is ``True`` (default is ``False``), the function
  returns the normalized STFT results, i.e., multiplied by :math:`(\\text\{frame\\_length\})^\{-0.5\}`.

Returns the real and the imaginary parts together as one tensor of size
:math:`(* \\times N \\times T \\times 2)`, where :math:`*` is the optional
batch size of `input`, :math:`N` is the number of frequencies where
STFT is applied, :math:`T` is the total number of frames used, and each pair
in the last dimension represents a complex number as the real part and the
imaginary part.

.. warning::
  This function changed signature at version 0.4.1. Calling with the
  previous signature may cause error or return incorrect result.
}
}
